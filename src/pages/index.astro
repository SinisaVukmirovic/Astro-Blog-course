---
// const str = 'Bob';
// const num = 2;
// const obj = {
// 	name: str,
// 	number: num,
// 	favorites: ['Astro', 'CSS', 'JS']
// }

// const isVisible = true;

// const results = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=5');
// const data = await results.json();

// anything in here gets runed in buildtime, like servers side script

import MainLayout from "../layouts/MainLayout.astro";

// const foregroundClr = 'hsl(20, 50%, 50%)';
// const backgroundClr = 'hsl(200, 80%, 80%)';

const isRed = true;

---

<!-- <html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body> -->
		<!-- <h1>{obj.favorites[1]}</h1>
		<h2>{obj.favorites[1].toLowerCase()}</h2>
		<h3>{obj.favorites[isVisible ? [2] : [1]]}</h3> -->

		<!-- <ul>
		{
			obj.favorites.map(item => (
				<li>{item}</li>
			))
		}
		</ul> -->

		<!-- <ul>
		{
			data.map(item => (
				<li>{item.title}</li>
			))
		}
		</ul>

		
	</body>
</html> -->

<!-- <MainLayout title="Home page" description="Home page of my blog">
	<h1>Astro Blog tutorial</h1>
</MainLayout> -->

<!-- <MainLayout title="My Blog"> -->
	<!-- below is JSX -->
	<!-- <p style={{
		backgroundColor: "lime",
		padding: "2rem"
	}}>My home page</p>
</MainLayout> -->

<!-- <MainLayout title="My Blog site">
	<h1>My Blog site</h1>
	<p>defined variable colors</p>
</MainLayout> -->

<MainLayout title="My Blog site">
	<h1>My Blog site</h1>
	<!-- <p class="big">defined variable colors</p> -->
	<p class:list={["big", {red: isRed}]}>defined variable colors</p>
</MainLayout>

<!-- <style is:global>
	h1 {
		font-size: 5rem;
	}
</style> -->

<!-- <style define:vars={{ foregroundClr, backgroundClr }}>
	h1 {
		font-size: 5rem;
	}
	p {
		font-size: 2rem;
		background-color: var(--backgroundClr);
		color: var(--foregroundClr);
	}
</style> -->

<style>
	.big {
		font-size: 3rem;
	}
	.red {
		color: red;
	}
</style>